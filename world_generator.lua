local Core = require("core")
local Entities = require("entities")

local WorldGenerator = {}

local function generatePath()
    local roomPath = {
        {0, 0, 0, 0},
        {0, 0, 0, 0},
        {0, 0, 0, 0},
        {0, 0, 0, 0}
    }

    local startRoom = { x = math.random(4), y = 1 }
    local endRoom = { x = 1, y = 4 }
    local curr = { x = startRoom.x, y = startRoom.y }

    roomPath[startRoom.x][startRoom.y] = 1

    while true do
        local n = 0
        if curr.x == 1 then
            n = math.random(3, 5)
        elseif curr.x == 4 then
            n = math.random(5, 7)
        else
            n = math.random(1, 5)
        end

        if n < 3 or 5 < n then
            if curr.x > 0 then
                if roomPath[curr.x - 1][curr.y] == 0 then
                    curr.x = curr.x - 1
                end
            elseif curr.x < 3 then
                if roomPath[curr.x + 1][curr.y] == 0 then
                    curr.x = curr.x + 1
                end
            else
                n = 5
            end
        elseif n == 3 or n == 4 then
            if curr.x > 0 then
                if roomPath[curr.x + 1][curr.y] == 0 then
                    curr.x = curr.x + 1
                end
            elseif curr.x < 3 then
                if roomPath[curr.x - 1][curr.y] == 0 then
                    curr.x = curr.x - 1
                end
            else
                n = 5
            end
        end
        
        if n == 5 then
            if curr.y < 4 then
                roomPath[curr.x][curr.y] = 2
                curr.y = curr.y + 1
                roomPath[curr.x][curr.y] = 3
            else
                endRoom = curr
                break
            end
        else
            roomPath[curr.x][curr.y] = 1
        end
    end

    return roomPath, startRoom, endRoom
end


local function generateRoomMines(roomPath, roomPos, isStart, isEnd)
    local roomType = roomPath[roomPos.x][roomPos.y]
    local roomTypeAbove = roomPath[roomPos.x][roomPos.y - 1]
    local room = "00000000000000000000000000000000000000000000000000000000000000000000000000000000"

    if isStart then
        if roomType == 2 then
            room = Core.choose(
                "60000600000000000000000000000000000000000008000000000000000000000000002021111120",
                "11111111112222222222000000000000000000000008000000000000000000000000002021111120",
                "00000000000008000000000000000000L000000000P111111000L111111000L00011111111101111",
                "0000000000008000000000000000000000000L000111111P000111111L001111000L001111011111"
            )
        else
            room = Core.choose(
                "60000600000000000000000000000000000000000008000000000000000000000000001111111111",
                "11111111112222222222000000000000000000000008000000000000000000000000001111111111",
                "00000000000008000000000000000000L000000000P111111000L111111000L00111111111111111",
                "0000000000008000000000000000000000000L000111111P000111111L001111100L001111111111"
            )
        end
    elseif isEnd then
        if roomTypeAbove == 2 then
            room = Core.choose(
                "00000000006000060000000000000000000000000008000000000000000000000000001111111111",
                "00000000000000000000000000000000000000000008000000000000000000000000001111111111",
                "00000000000010021110001001111000110111129012000000111111111021111111201111111111",
                "00000000000111200100011110010021111011000000002109011111111102111111121111111111"
            )
        else
            room = Core.choose(
                "60000600000000000000000000000000000000000008000000000000000000000000001111111111",
                "11111111112222222222000000000000000000000008000000000000000000000000001111111111"
            )
        end
    elseif roomType == 0 then
        room = Core.choose(
            "00000000000010111100000000000000011010000050000000000000000000000000001111111111",
            "110000000040L600000011P000000011L000000011L5000000110000000011000000001111111111",
            "00000000110060000L040000000P110000000L110050000L11000000001100000000111111111111",
            "110000000040L600000011P000000011L000000011L0000000110000000011000000001112222111",
            "00000000110060000L040000000P110000000L110000000L11000000001100000000111112222111",
            "11111111110221111220002111120000022220000002222000002111120002211112201111111111",
            "11111111111112222111112000021111102201111120000211111022011111200002111112222111",
            "11111111110000000000110000001111222222111111111111112222221122000000221100000011",
            "121111112100L2112L0011P1111P1111L2112L1111L1111L1111L1221L1100L0000L001111221111"
        )
    elseif roomType == 1 then
        room = Core.choose(
            "60000600000000000000000000000000000000000050000000000000000000000000001111111111",
            "60000600000000000000000000000000000000005000050000000000000000000000001111111111",
            "60000600000000000000000000000000050000000000000000000000000011111111111111111111",
            "60000600000000000000000600000000000000000000000000000222220000111111001111111111",
            "11111111112222222222000000000000000000000050000000000000000000000000001111111111",
            "11111111112111111112022222222000000000000050000000000000000000000000001111111111",
            "11111111112111111112211111111221111111120111111110022222222000000000001111111111",
            Core.choose(
                "1111111111000000000L111111111P000000000L5000050000000000000000000000001111111111",
                "1111111111L000000000P111111111L0000000005000050000000000000000000000001111111111"
            ),
            "000000000000L0000L0000P1111P0000L0000L0000P1111P0000L1111L0000L1111L001111111111",
            "00000000000111111110001111110000000000005000050000000000000000000000001111111111",
            "00000000000000000000000000000000000000000021111200021111112021111111121111111111",
            Core.choose(
                "2222222222000000000000000000L001111111P001050000L011000000L010000000L01111111111",
                "222222222200000000000L000000000P111111100L500000100L000000110L000000011111111111"
            )
        )
    elseif roomType == 2 then
        if roomPathAbove ~= 2 then
            room = Core.choose(
                "00000000006000060000000000000000000000006000060000000000000000000000000000000000",
                "00000000006000060000000000000000000000000000050000000000000000000000001202111111",
                "00000000006000060000000000000000000000050000000000000000000000000000001111112021",
                "00000000006000060000000000000000000000000000000000000000000002200002201112002111",
                "00000000000000220000000000000000200002000112002110011100111012000000211111001111",
                "00000000000060000000000000000000000000000000000000001112220002100000001110111111",
                "00000000000060000000000000000000000000000000000000002221110000000001201111110111",
                "00000000000060000000000000000000000000000000000000002022020000100001001111001111",
                "11111111112222222222000000000000000000000000000000000000000000000000001120000211",
                "11111111112222111111000002211100000002110000000000200000000000000000211120000211",
                "11111111111111112222111220000011200000000000000000000000000012000000001120000211",
                "11111111112111111112021111112000211112000002112000000022000002200002201111001111"
            )
        else
            room = Core.choose(
                "00000000006000060000000000000000000000006000060000000000000000000000000000000000",
                "00000000006000060000000000000000000000000000050000000000000000000000001202111111",
                "00000000006000060000000000000000000000050000000000000000000000000000001111112021",
                "00000000006000060000000000000000000000000000000000000000000002200002201112002111",
                "00000000000000220000000000000000200002000112002110011100111012000000211111001111",
                "00000000000060000000000000000000000000000000000000001112220002100000001110111111",
                "00000000000060000000000000000000000000000000000000002221110000000001201111110111",
                "00000000000060000000000000000000000000000000000000002022020000100001001111001111"
            )
        end
    elseif roomType == 3 then
        room = Core.choose(
            "00000000000000000000000000000000000000000050000000000000000000000000001111111111",
            "00000000000000000000000000000000000000005000050000000000000000000000001111111111",
            "00000000000000000000000000000050000500000000000000000000000011111111111111111111",
            "00000000000000000000000600000000000000000000000000000111110000111111001111111111",
            "00000000000111111110001111110000000000005000050000000000000000000000001111111111",
            "00000000000000000000000000000000000000000021111200021111112021111111121111111111",
            "10000000011112002111111200211100000000000022222000111111111111111111111111111111",
            Core.choose(
                "0000000000000000000000000000L001111111P001050000L011000000L010000000L01111111111",
                "000000000000000000000L000000000P111111100L500000100L000000110L000000011111111111"
            )
        )
    else
        room = "00000000000000000000000000000000000000000000000000000000000000000000000000000000"
    end

    return room
end

local function generateRoom(levelName, roomPath, roomPos, isStart, isEnd)
    local levels = {
        mines = generateRoomMines
    }

    return levels[levelName](roomPath, roomPos, isStart, isEnd)
end

local function addObstacles(room)
    for i = 1, 80 do
        local char = string.sub(room, i, i)
        local obstacle = nil

        if char == "8" then
            obstacle = Core.choose(
                { "00900", "01110", "11111" },
                { "00900", "02120", "02120" },
                { "00000", "00000", "92222" },
                { "00000", "00000", "22229" },
                { "00000", "11001", "19001" },
                { "00000", "10011", "10091" },
                { "11111", "10001", "40094" },
                { "00000", "12021", "12921" }
            )
        elseif char == "5" then
            obstacle = Core.choose(
                { "11111", "00000", "00000" },
                { "00000", "11110", "00000" },
                { "00000", "01111", "00000" },
                { "00000", "00000", "11111" },
                { "00000", "20200", "17177" },
                { "00000", "02020", "71717" },
                { "00000", "00202", "77171" },
                { "00000", "22200", "11100" },
                { "00000", "02220", "01110" },
                { "00000", "00222", "00111" },
                { "11100", "22200", "00000" },
                { "01110", "02220", "00000" },
                { "00111", "00222", "00000" },
                { "00000", "02220", "21112" },
                { "00000", "20100", "77117" },
                { "00000", "00102", "71177" }
            )
        elseif char == "6" then
            obstacle = Core.choose(
                { "11111", "00000", "00000" },
                { "22222", "00000", "00000" },
                { "11100", "22200", "00000" },
                { "01110", "02220", "00000" },
                { "00111", "00222", "00000" },
                { "00000", "01110", "00000" },
                { "00000", "01110", "02220" },
                { "00000", "02220", "01110" },
                { "00000", "00220", "01111" },
                { "00000", "22200", "11100" }
            )
        end

        if obstacle ~= nil then
            for j, line in pairs(obstacle) do
                room = string.sub(room, 0, i + (j - 1) * 10 - 1)
                    .. line
                    .. string.sub(room, i + (j - 1) * 10 + 5, #room)
            end
        end
    end

    return room
end

local function createTiles(room, roomPos, isStart, isEnd)
    for x = 1, 10 do
        for y = 1, 8 do
            local i = (y - 1) * 10 + x
            local tile = string.sub(room, i, i)
            local tilePos = {
                x = ((roomPos.x - 1) * 10 + x) * 16 + 8,
                y = ((roomPos.y - 1) * 8 + y) * 16 + 8
            }

            if tile == "1" then
                if math.random(10) == 1 then
                    Entities.spawn("block", tilePos.x, tilePos.y)
                else
                    Entities.spawn("brick", tilePos.x, tilePos.y)
                end
            elseif tile == "1" then
                if math.random(10) == 1 then
                    Entities.spawn("brick", tilePos.x, tilePos.y)
                else
                    Entities.spawn("block", tilePos.x, tilePos.y)
                end
            elseif tile == "4" then
                -- Should be a pushable block
                Entities.spawn("block", tilePos.x, tilePos.y)
            elseif tile == "7" then
                Entities.spawn("spikes", tilePos.x, tilePos.y)
            elseif tile == "9" then
                Entities.spawn("brick", tilePos.x, tilePos.y + 16)
                if isStart then
                    Entities.spawn("player", tilePos.x, tilePos.y)
                end
            elseif tile == "L" then
                Entities.spawn("ladder", tilePos.x, tilePos.y);
            elseif tile == "P" then
                Entities.spawn("ladder_top", tilePos.x, tilePos.y);
            end
        end
    end
end

WorldGenerator.createLevel = function()
    for _, x in ipairs({0, 41}) do
        for y = 0, 33 do
            Entities.spawn("brick", x * 16 + 8, y * 16 + 8)
        end
    end

    for x = 0, 41 do
        for _, y in ipairs({0, 33}) do
            Entities.spawn("brick", x * 16 + 8, y * 16 + 8)
        end
    end

    local roomPath, startRoom, endRoom = generatePath()

    for x = 1, 4 do
        for y = 1, 4 do
            local isStart = startRoom.x == x and startRoom.y == y
            local isEnd = endRoom.x == x and endRoom.y == y
            local room = generateRoom("mines", roomPath, { x = x, y = y }, isStart, isEnd)
            room = addObstacles(room)
            createTiles(room, { x = x, y = y }, isStart, isEnd)
        end
    end
end

return WorldGenerator
